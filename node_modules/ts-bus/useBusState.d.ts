import { BusEvent, EventCreatorFn, SubscribeWithPayloadDispatchFn, SubscriptionDef } from "./types";
export declare const stateSubscriber: <E extends BusEvent<any>>(...definition: SubscriptionDef<E>[]) => SubscribeWithPayloadDispatchFn<E>;
export declare function useBusState<E extends BusEvent = BusEvent>(initState: E["payload"] | undefined, event: EventCreatorFn<E>): E["payload"];
export declare namespace useBusState {
    var configure: <E extends BusEvent<any> = BusEvent<any>>(options: UseBusStateOptions<E>) => (initState: E["payload"] | (() => E["payload"])) => E["payload"];
}
declare type UseBusStateOptions<E extends BusEvent> = {
    subscriber: SubscribeWithPayloadDispatchFn<E>;
};
export {};
